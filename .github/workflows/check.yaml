name: Check

on:
  pull_request:
  push:
    branches:
      - "main"
      - "releases/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install protoc
        run: sudo apt install -y protobuf-compiler

      - name: Build for ${{ matrix.arch }}
        uses: dtolnay/rust-toolchain@stable
        with:
          use-cross: true
          command: build
          args:  --locked --target ${{ matrix.arch }}-unknown-linux-gnu --verbose

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rustup component add rustfmt
        run: rustup component add rustfmt

      - name: Run rustfmt
        run: cargo fmt --all -- --check

# Temporarily close the cargo clippy inspection, and then check after the first version of the project is stable.
#  clippy:
#    name: Clippy
#    runs-on: ubuntu-latest
#    continue-on-error: true
#    strategy:
#      matrix:
#        arch: [x86_64, aarch64]
#    steps:
#      - name: Checkout the repository
#        uses: actions/checkout@v3
#
#      - name: Set up Rust
#        uses: dtolnay/rust-toolchain@stable
#
#      - name: Run clippy
#        run: cargo clippy --tests -- -D warnings

  deny:
    name: Deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
# This project uses a BSD-3-Clause license, which fails inspection.
# Because most crates do not explicitly allow BSD licenses,
# even though BSD does not cause open source license conflicts.
#          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Run check
      uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}
        arguments: --all-features